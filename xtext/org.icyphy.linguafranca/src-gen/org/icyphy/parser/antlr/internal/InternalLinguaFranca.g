/*
 * generated by Xtext 2.17.0
 */
grammar InternalLinguaFranca;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.icyphy.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.icyphy.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.icyphy.services.LinguaFrancaGrammarAccess;

}

@parser::members {

 	private LinguaFrancaGrammarAccess grammarAccess;

    public InternalLinguaFrancaParser(TokenStream input, LinguaFrancaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected LinguaFrancaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTargetTargetParserRuleCall_0_0());
				}
				lv_target_0_0=ruleTarget
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"target",
						lv_target_0_0,
						"org.icyphy.LinguaFranca.Target");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_1_0());
				}
				lv_imports_1_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_1_0,
						"org.icyphy.LinguaFranca.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getBlocksActorParserRuleCall_2_0_0());
					}
					lv_blocks_2_1=ruleActor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"blocks",
							lv_blocks_2_1,
							"org.icyphy.LinguaFranca.Actor");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModelAccess().getBlocksCompositeParserRuleCall_2_0_1());
					}
					lv_blocks_2_2=ruleComposite
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"blocks",
							lv_blocks_2_2,
							"org.icyphy.LinguaFranca.Composite");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleTarget
entryRuleTarget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTargetRule()); }
	iv_ruleTarget=ruleTarget
	{ $current=$iv_ruleTarget.current; }
	EOF;

// Rule Target
ruleTarget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='target'
		{
			newLeafNode(otherlv_0, grammarAccess.getTargetAccess().getTargetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTargetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTargetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getTargetAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getNamePathParserRuleCall_1_0());
				}
				lv_name_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.icyphy.LinguaFranca.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actor'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getParametersParamsParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleParams
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.icyphy.LinguaFranca.Params");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getInputsInputParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.icyphy.LinguaFranca.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getOutputsOutputParserRuleCall_5_0());
				}
				lv_outputs_5_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_5_0,
						"org.icyphy.LinguaFranca.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getTriggersTriggerParserRuleCall_6_0());
				}
				lv_triggers_6_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"triggers",
						lv_triggers_6_0,
						"org.icyphy.LinguaFranca.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getPreamblePreambleParserRuleCall_7_0());
				}
				lv_preamble_7_0=rulePreamble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"preamble",
						lv_preamble_7_0,
						"org.icyphy.LinguaFranca.Preamble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getInitializeInitializeParserRuleCall_8_0());
				}
				lv_initialize_8_0=ruleInitialize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					set(
						$current,
						"initialize",
						lv_initialize_8_0,
						"org.icyphy.LinguaFranca.Initialize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getActorAccess().getReactionsReactionParserRuleCall_9_0());
				}
				lv_reactions_9_0=ruleReaction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActorRule());
					}
					add(
						$current,
						"reactions",
						lv_reactions_9_0,
						"org.icyphy.LinguaFranca.Reaction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleComposite
entryRuleComposite returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeRule()); }
	iv_ruleComposite=ruleComposite
	{ $current=$iv_ruleComposite.current; }
	EOF;

// Rule Composite
ruleComposite returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='composite'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompositeAccess().getCompositeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompositeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getParametersParamsParserRuleCall_2_0());
				}
				lv_parameters_2_0=ruleParams
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_2_0,
						"org.icyphy.LinguaFranca.Params");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCompositeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getInputsInputParserRuleCall_4_0());
				}
				lv_inputs_4_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					add(
						$current,
						"inputs",
						lv_inputs_4_0,
						"org.icyphy.LinguaFranca.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getOutputsOutputParserRuleCall_5_0());
				}
				lv_outputs_5_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					add(
						$current,
						"outputs",
						lv_outputs_5_0,
						"org.icyphy.LinguaFranca.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getTriggersTriggerParserRuleCall_6_0());
				}
				lv_triggers_6_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					add(
						$current,
						"triggers",
						lv_triggers_6_0,
						"org.icyphy.LinguaFranca.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getPreamblePreambleParserRuleCall_7_0());
				}
				lv_preamble_7_0=rulePreamble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					set(
						$current,
						"preamble",
						lv_preamble_7_0,
						"org.icyphy.LinguaFranca.Preamble");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getInitializeInitializeParserRuleCall_8_0());
				}
				lv_initialize_8_0=ruleInitialize
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					set(
						$current,
						"initialize",
						lv_initialize_8_0,
						"org.icyphy.LinguaFranca.Initialize");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getReactionsReactionParserRuleCall_9_0());
				}
				lv_reactions_9_0=ruleReaction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					add(
						$current,
						"reactions",
						lv_reactions_9_0,
						"org.icyphy.LinguaFranca.Reaction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getInstancesInstanceParserRuleCall_10_0());
				}
				lv_instances_10_0=ruleInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					add(
						$current,
						"instances",
						lv_instances_10_0,
						"org.icyphy.LinguaFranca.Instance");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeAccess().getConnectionsConnectionParserRuleCall_11_0());
				}
				lv_connections_11_0=ruleConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeRule());
					}
					add(
						$current,
						"connections",
						lv_connections_11_0,
						"org.icyphy.LinguaFranca.Connection");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getCompositeAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputAccess().getInputKeyword_0());
		}
		(
			(
				(
					lv_name_1_1=RULE_ID
					{
						newLeafNode(lv_name_1_1, grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_1_2='input'
					{
						newLeafNode(lv_name_1_2, grammarAccess.getInputAccess().getNameInputKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_2, null);
					}
				)
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getInputAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInputAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInputRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.icyphy.LinguaFranca.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getInputAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='output'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputAccess().getOutputKeyword_0());
		}
		(
			(
				(
					lv_name_1_1=RULE_ID
					{
						newLeafNode(lv_name_1_1, grammarAccess.getOutputAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_1_2='output'
					{
						newLeafNode(lv_name_1_2, grammarAccess.getOutputAccess().getNameOutputKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_2, null);
					}
				)
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.icyphy.LinguaFranca.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getOutputAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='trigger'
		{
			newLeafNode(otherlv_0, grammarAccess.getTriggerAccess().getTriggerKeyword_0());
		}
		(
			(
				(
					lv_name_1_1=RULE_ID
					{
						newLeafNode(lv_name_1_1, grammarAccess.getTriggerAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTriggerRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_1_2='trigger'
					{
						newLeafNode(lv_name_1_2, grammarAccess.getTriggerAccess().getNameTriggerKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTriggerRule());
						}
						setWithLastConsumed($current, "name", lv_name_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTriggerAccess().getPeriodPeriodParserRuleCall_2_0());
				}
				lv_period_2_0=rulePeriod
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTriggerRule());
					}
					set(
						$current,
						"period",
						lv_period_2_0,
						"org.icyphy.LinguaFranca.Period");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getTriggerAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleReaction
entryRuleReaction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReactionRule()); }
	iv_ruleReaction=ruleReaction
	{ $current=$iv_ruleReaction.current; }
	EOF;

// Rule Reaction
ruleReaction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='reaction'
		{
			newLeafNode(otherlv_0, grammarAccess.getReactionAccess().getReactionKeyword_0());
		}
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getReactionAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						lv_triggers_2_0=RULE_ID
						{
							newLeafNode(lv_triggers_2_0, grammarAccess.getReactionAccess().getTriggersIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getReactionRule());
							}
							addWithLastConsumed(
								$current,
								"triggers",
								lv_triggers_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getReactionAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							lv_triggers_4_0=RULE_ID
							{
								newLeafNode(lv_triggers_4_0, grammarAccess.getReactionAccess().getTriggersIDTerminalRuleCall_1_1_1_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getReactionRule());
								}
								addWithLastConsumed(
									$current,
									"triggers",
									lv_triggers_4_0,
									"org.eclipse.xtext.common.Terminals.ID");
							}
						)
					)
				)*
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getReactionAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReactionAccess().getGetsGetsParserRuleCall_2_0());
				}
				lv_gets_6_0=ruleGets
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactionRule());
					}
					set(
						$current,
						"gets",
						lv_gets_6_0,
						"org.icyphy.LinguaFranca.Gets");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getReactionAccess().getSetsSetsParserRuleCall_3_0());
				}
				lv_sets_7_0=ruleSets
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReactionRule());
					}
					set(
						$current,
						"sets",
						lv_sets_7_0,
						"org.icyphy.LinguaFranca.Sets");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_code_8_0=RULE_CODE
				{
					newLeafNode(lv_code_8_0, grammarAccess.getReactionAccess().getCodeCODETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReactionRule());
					}
					setWithLastConsumed(
						$current,
						"code",
						lv_code_8_0,
						"org.icyphy.LinguaFranca.CODE");
				}
			)
		)
	)
;

// Entry rule entryRulePreamble
entryRulePreamble returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreambleRule()); }
	iv_rulePreamble=rulePreamble
	{ $current=$iv_rulePreamble.current; }
	EOF;

// Rule Preamble
rulePreamble returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='preamble'
		{
			newLeafNode(otherlv_0, grammarAccess.getPreambleAccess().getPreambleKeyword_0());
		}
		(
			(
				lv_code_1_0=RULE_CODE
				{
					newLeafNode(lv_code_1_0, grammarAccess.getPreambleAccess().getCodeCODETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPreambleRule());
					}
					setWithLastConsumed(
						$current,
						"code",
						lv_code_1_0,
						"org.icyphy.LinguaFranca.CODE");
				}
			)
		)
	)
;

// Entry rule entryRuleInitialize
entryRuleInitialize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitializeRule()); }
	iv_ruleInitialize=ruleInitialize
	{ $current=$iv_ruleInitialize.current; }
	EOF;

// Rule Initialize
ruleInitialize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='initialize'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitializeAccess().getInitializeKeyword_0());
		}
		(
			(
				lv_code_1_0=RULE_CODE
				{
					newLeafNode(lv_code_1_0, grammarAccess.getInitializeAccess().getCodeCODETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitializeRule());
					}
					setWithLastConsumed(
						$current,
						"code",
						lv_code_1_0,
						"org.icyphy.LinguaFranca.CODE");
				}
			)
		)
	)
;

// Entry rule entryRuleInstance
entryRuleInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceRule()); }
	iv_ruleInstance=ruleInstance
	{ $current=$iv_ruleInstance.current; }
	EOF;

// Rule Instance
ruleInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='instance'
		{
			newLeafNode(otherlv_0, grammarAccess.getInstanceAccess().getInstanceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getInstanceAccess().getEqualsSignKeyword_2());
		}
		(
			(
				lv_actorClass_3_0=RULE_ID
				{
					newLeafNode(lv_actorClass_3_0, grammarAccess.getInstanceAccess().getActorClassIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceRule());
					}
					setWithLastConsumed(
						$current,
						"actorClass",
						lv_actorClass_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getInstanceAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInstanceAccess().getParametersAssignmentsParserRuleCall_4_1_0());
					}
					lv_parameters_5_0=ruleAssignments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInstanceRule());
						}
						set(
							$current,
							"parameters",
							lv_parameters_5_0,
							"org.icyphy.LinguaFranca.Assignments");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getInstanceAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getInstanceAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	iv_ruleConnection=ruleConnection
	{ $current=$iv_ruleConnection.current; }
	EOF;

// Rule Connection
ruleConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getLeftPortPortParserRuleCall_0_0());
				}
				lv_leftPort_0_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"leftPort",
						lv_leftPort_0_0,
						"org.icyphy.LinguaFranca.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='->'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectionAccess().getHyphenMinusGreaterThanSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConnectionAccess().getRightPortPortParserRuleCall_2_0());
				}
				lv_rightPort_2_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConnectionRule());
					}
					set(
						$current,
						"rightPort",
						lv_rightPort_2_0,
						"org.icyphy.LinguaFranca.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectionAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleAssignments
entryRuleAssignments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentsRule()); }
	iv_ruleAssignments=ruleAssignments
	{ $current=$iv_ruleAssignments.current; }
	EOF;

// Rule Assignments
ruleAssignments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentParserRuleCall_0_0());
				}
				lv_assignments_0_0=ruleAssignment
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentsRule());
					}
					add(
						$current,
						"assignments",
						lv_assignments_0_0,
						"org.icyphy.LinguaFranca.Assignment");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getAssignmentsAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentsAccess().getAssignmentsAssignmentParserRuleCall_1_1_0());
					}
					lv_assignments_2_0=ruleAssignment
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentsRule());
						}
						add(
							$current,
							"assignments",
							lv_assignments_2_0,
							"org.icyphy.LinguaFranca.Assignment");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.icyphy.LinguaFranca.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGets
entryRuleGets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetsRule()); }
	iv_ruleGets=ruleGets
	{ $current=$iv_ruleGets.current; }
	EOF;

// Rule Gets
ruleGets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_gets_0_0=RULE_ID
				{
					newLeafNode(lv_gets_0_0, grammarAccess.getGetsAccess().getGetsIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetsRule());
					}
					addWithLastConsumed(
						$current,
						"gets",
						lv_gets_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getGetsAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_gets_2_0=RULE_ID
					{
						newLeafNode(lv_gets_2_0, grammarAccess.getGetsAccess().getGetsIDTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getGetsRule());
						}
						addWithLastConsumed(
							$current,
							"gets",
							lv_gets_2_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleParams
entryRuleParams returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamsRule()); }
	iv_ruleParams=ruleParams
	{ $current=$iv_ruleParams.current; }
	EOF;

// Rule Params
ruleParams returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParamsAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParamsAccess().getParamsParamParserRuleCall_1_0());
				}
				lv_params_1_0=ruleParam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamsRule());
					}
					add(
						$current,
						"params",
						lv_params_1_0,
						"org.icyphy.LinguaFranca.Param");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getParamsAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParamsAccess().getParamsParamParserRuleCall_2_1_0());
					}
					lv_params_3_0=ruleParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParamsRule());
						}
						add(
							$current,
							"params",
							lv_params_3_0,
							"org.icyphy.LinguaFranca.Param");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParamsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current; }
	EOF;

// Rule Param
ruleParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='const'
			{
				newLeafNode(otherlv_0, grammarAccess.getParamAccess().getConstKeyword_0());
			}
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getParamAccess().getColonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParamRule());
						}
						set(
							$current,
							"type",
							lv_type_3_0,
							"org.icyphy.LinguaFranca.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getParamAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParamAccess().getValueValueParserRuleCall_3_1_0());
					}
					lv_value_5_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParamRule());
						}
						set(
							$current,
							"value",
							lv_value_5_0,
							"org.icyphy.LinguaFranca.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getParamAccess().getRightParenthesisKeyword_3_2());
			}
		)?
	)
;

// Entry rule entryRulePeriod
entryRulePeriod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodRule()); }
	iv_rulePeriod=rulePeriod
	{ $current=$iv_rulePeriod.current; }
	EOF;

// Rule Period
rulePeriod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getPeriodAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				(
					lv_period_1_1=RULE_ID
					{
						newLeafNode(lv_period_1_1, grammarAccess.getPeriodAccess().getPeriodIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodRule());
						}
						setWithLastConsumed(
							$current,
							"period",
							lv_period_1_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_period_1_2=RULE_NUMBER
					{
						newLeafNode(lv_period_1_2, grammarAccess.getPeriodAccess().getPeriodNUMBERTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPeriodRule());
						}
						setWithLastConsumed(
							$current,
							"period",
							lv_period_1_2,
							"org.icyphy.LinguaFranca.NUMBER");
					}
				)
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getPeriodAccess().getCommaKeyword_2_0());
			}
			(
				(
					(
						lv_periodic_3_0='PERIODIC'
						{
							newLeafNode(lv_periodic_3_0, grammarAccess.getPeriodAccess().getPeriodicPERIODICKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPeriodRule());
							}
							setWithLastConsumed($current, "periodic", true, "PERIODIC");
						}
					)
				)
				    |
				(
					(
						lv_once_4_0='ONCE'
						{
							newLeafNode(lv_once_4_0, grammarAccess.getPeriodAccess().getOnceONCEKeyword_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPeriodRule());
							}
							setWithLastConsumed($current, "once", true, "ONCE");
						}
					)
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getPeriodAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current.getText(); }
	EOF;

// Rule Port
rulePort returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPortAccess().getIDTerminalRuleCall_0());
		}
		    |
		(
			this_ID_1=RULE_ID
			{
				$current.merge(this_ID_1);
			}
			{
				newLeafNode(this_ID_1, grammarAccess.getPortAccess().getIDTerminalRuleCall_1_0());
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPortAccess().getFullStopKeyword_1_1());
			}
			(
				this_ID_3=RULE_ID
				{
					$current.merge(this_ID_3);
				}
				{
					newLeafNode(this_ID_3, grammarAccess.getPortAccess().getIDTerminalRuleCall_1_2_0());
				}
				    |
				kw='input'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPortAccess().getInputKeyword_1_2_1());
				}
				    |
				kw='output'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPortAccess().getOutputKeyword_1_2_2());
				}
			)
		)
	)
;

// Entry rule entryRuleSets
entryRuleSets returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetsRule()); }
	iv_ruleSets=ruleSets
	{ $current=$iv_ruleSets.current; }
	EOF;

// Rule Sets
ruleSets returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='->'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetsAccess().getHyphenMinusGreaterThanSignKeyword_0());
		}
		(
			(
				lv_sets_1_0=RULE_ID
				{
					newLeafNode(lv_sets_1_0, grammarAccess.getSetsAccess().getSetsIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetsRule());
					}
					addWithLastConsumed(
						$current,
						"sets",
						lv_sets_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getSetsAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_sets_3_0=RULE_ID
					{
						newLeafNode(lv_sets_3_0, grammarAccess.getSetsAccess().getSetsIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSetsRule());
						}
						addWithLastConsumed(
							$current,
							"sets",
							lv_sets_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getTypeAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_CODE_1=RULE_CODE
		{
			$current.merge(this_CODE_1);
		}
		{
			newLeafNode(this_CODE_1, grammarAccess.getTypeAccess().getCODETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current.getText(); }
	EOF;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getValueAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_NUMBER_1=RULE_NUMBER
		{
			$current.merge(this_NUMBER_1);
		}
		{
			newLeafNode(this_NUMBER_1, grammarAccess.getValueAccess().getNUMBERTerminalRuleCall_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_CODE_3=RULE_CODE
		{
			$current.merge(this_CODE_3);
		}
		{
			newLeafNode(this_CODE_3, grammarAccess.getValueAccess().getCODETerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulePath
entryRulePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current.getText(); }
	EOF;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPathAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getPathAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

RULE_NUMBER : '-'? RULE_INT ('.' RULE_INT)?;

RULE_CODE : '{=' .* '=}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
